% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_data.R
\name{generate_data}
\alias{generate_data}
\title{generate simulated affiliation data}
\usage{
generate_data(
  n_ids = NULL,
  n_beh = NULL,
  behav_types = "count",
  indi_sd = NULL,
  dyad_sd = NULL,
  dyadic_covariate_slope = 0,
  disp_pars_gamma = NULL,
  disp_pars_beta = NULL,
  beh_intercepts = NULL,
  prop_trials = 100,
  count_obseff = 1,
  exact = TRUE
)
}
\arguments{
\item{n_ids}{numeric, number of individuals}

\item{n_beh}{numeric, number of behaviors}

\item{behav_types}{character vector of length \code{n_beh} that describes
the kind of data to be generated. Possible values are \code{"prop"},
\code{"count"}, \code{"dur_gamma"} and \code{"dur_beta"}.}

\item{indi_sd}{numeric, the SD for the individual component. Must be
positive. Default is a random value
(\code{runif(1, 0, 4)}).}

\item{dyad_sd}{numeric, the SD for the dyadic component. Must be
positive. Default is a random value
(\code{runif(1, 0, 4)}).}

\item{dyadic_covariate_slope}{numeric, default is 0. Fits an additional
covariate (stdnormal) with this slope to contribute to the linear
predictor.}

\item{disp_pars_gamma}{numeric of the same length as \code{n_beh}.
Dispersion parameter(s) for any behavior with
\code{behav_types = "dur_gamma"}. See details.}

\item{disp_pars_beta}{numeric of the same length as \code{n_beh}.
Dispersion parameter(s) for any behavior with
\code{behav_types = "dur_beta"}. See details.}

\item{beh_intercepts}{numeric of the same length as \code{n_beh}: the
intercepts on the linear scale for each behavior
(the group-level average). Default is random
(\code{rnorm(n_beh, -1, 2)}).}

\item{prop_trials}{numeric of length 1 or 2, default is \code{100}, i.e.
per dyad there are 100 'trials' observed. If numeric of length 2,
each dyad gets its own number of trials ranging between the two values
supplied. Only relevant for data generated as proportions.}

\item{count_obseff}{numeric of length 1 or 2, default is \code{1}, i.e.
per dyad there is 1 unit of observation effort (think 'hours').
If numeric of length 2, each dyad get its own observation effort,
sampled as uniform real between the two values. This is only relevant
for data generated as counts.}

\item{exact}{logical, default is \code{TRUE}: should the varying intercepts
for \code{indi_sd} and \code{dyad_sd} be rescaled so that they
have means of 0 and exact SD as supplied.}
}
\value{
a list with three named items, which are lists too:
\itemize{
\item{\code{$processed}:} {misc output generated, most importantly
interactions in matrix format}
\item{\code{$standat}:} {standata to be passed to
\code{\link{sociality_model}} (see
\code{\link{make_stan_data_from_matrices}})}
\item{\code{$input_data}:} {the input data supplied via arguments or
generated randomly in the function if using
the arguments' defaults}
}
}
\description{
generate simulated affiliation data
}
\details{
Currently, four data types/distributions via \code{behav_types}
are supported are \code{"count"}, \code{"prop"},
\code{"dur_gamma"} and \code{"dur_beta"}.

\if{html}{\out{<div class="sourceCode">}}\preformatted{     For the dispersion parameters, the input vector must be of the same
     length and the indexing must match \code{behav_types}. For example,
     \code{behav_types = c("count", "dur_gamma")} requires a vector of
     length 2, e.g. \code{disp_pars_gamma = c(0, 0.6)}, where the
     first item will be ignored, i.e. only the second entry is
     relevant.
}\if{html}{\out{</div>}}
}
\examples{
ex <- generate_data(n_ids = 7, n_beh = 2,
                    behav_types = c("count", "dur_gamma"),
                    indi_sd = 1.2, dyad_sd = 0.8,
                    disp_pars_gamma = c(0, 0.6),
                    beh_intercepts = c(1.4, -0.7))
# two interaction matrices:
ex$processed$interaction_matrices[[1]]
ex$processed$interaction_matrices[[2]]

}
